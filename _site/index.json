{
  "api/ASE_Assignment.CommandCheck.html": {
    "href": "api/ASE_Assignment.CommandCheck.html",
    "title": "Class CommandCheck | Ase_Assignment_Parishma_77356742",
    "keywords": "Class CommandCheck Namespace ASE_Assignment Assembly ASE Assignment.dll Provides functionality to execute canvas commands by parsing input strings and delegating actions to an BOOSE.ICanvas instance. public class CommandCheck Inheritance object CommandCheck Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors CommandCheck(ICanvas) Initializes a new instance of the CommandCheck class. public CommandCheck(ICanvas canvas) Parameters canvas ICanvas The canvas on which commands will be executed. Methods ExecuteCommand(string) public void ExecuteCommand(string command) Parameters command string"
  },
  "api/ASE_Assignment.CsCommandFactory.html": {
    "href": "api/ASE_Assignment.CsCommandFactory.html",
    "title": "Class CsCommandFactory | Ase_Assignment_Parishma_77356742",
    "keywords": "Class CsCommandFactory Namespace ASE_Assignment Assembly ASE Assignment.dll A factory class responsible for creating command instances based on the provided command type. It overrides the BOOSE.CommandFactory to return specific command objects. public class CsCommandFactory : CommandFactory, ICommandFactory Inheritance object CommandFactory CsCommandFactory Implements ICommandFactory Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods MakeCommand(string) Creates a command instance based on the specified command type. public override ICommand MakeCommand(string commandType) Parameters commandType string The type of the command to be created. Returns ICommand An instance of a command corresponding to the given command type. Exceptions FactoryException Thrown if the command type is not recognized or if there's an error during command creation."
  },
  "api/ASE_Assignment.CsMethodCommand.html": {
    "href": "api/ASE_Assignment.CsMethodCommand.html",
    "title": "Class CsMethodCommand | Ase_Assignment_Parishma_77356742",
    "keywords": "Class CsMethodCommand Namespace ASE_Assignment Assembly ASE Assignment.dll Represents a custom implementation of the \"Method\" command. Inherits from the BOOSE.Method class to handle method-related functionality in the program. public class CsMethodCommand : Method, ICommand Inheritance object Command Evaluation Boolean ConditionalCommand CompoundCommand Method CsMethodCommand Implements ICommand Inherited Members Method.CheckParameters(string[]) Method.Compile() Method.Execute() Method.LocalVariables Method.MethodName Method.Type CompoundCommand.ReduceRestrictions() CompoundCommand.CorrespondingCommand ConditionalCommand.endLineNumber ConditionalCommand.EndLineNumber ConditionalCommand.Condition ConditionalCommand.LineNumber ConditionalCommand.CondType ConditionalCommand.ReturnLineNumber Boolean.BoolValue Evaluation.expression Evaluation.evaluatedExpression Evaluation.varName Evaluation.value Evaluation.ProcessExpression(string) Evaluation.Expression Evaluation.VarName Evaluation.Value Evaluation.Local Command.program Command.parameterList Command.parameters Command.paramsint Command.Set(StoredProgram, string) Command.ProcessParameters(string) Command.ToString() Command.Program Command.Name Command.ParameterList Command.Parameters Command.Paramsint object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors CsMethodCommand() Initializes a new instance of the CsMethodCommand class. The constructor currently does not call any initialization logic, but it could invoke the base class method if needed. public CsMethodCommand() Methods Restrictions() Applies any restrictions or conditions related to the method command. This method overrides the base Method.Restrictions to perform additional checks or logic specific to this command. public override void Restrictions()"
  },
  "api/ASE_Assignment.CsStoredProgram.html": {
    "href": "api/ASE_Assignment.CsStoredProgram.html",
    "title": "Class CsStoredProgram | Ase_Assignment_Parishma_77356742",
    "keywords": "Class CsStoredProgram Namespace ASE_Assignment Assembly ASE Assignment.dll Represents a custom implementation of a stored program that manages the execution of commands in the program. Inherits from the BOOSE.StoredProgram class and overrides methods for program control. public class CsStoredProgram : StoredProgram, IList, ICollection, IEnumerable, ICloneable, IStoredProgram Inheritance object ArrayList StoredProgram CsStoredProgram Implements IList ICollection IEnumerable ICloneable IStoredProgram Inherited Members StoredProgram.SyntaxOk StoredProgram.AddMethod(Method) StoredProgram.GetMethod(string) StoredProgram.AddVariable(Evaluation) StoredProgram.GetVariable(string) StoredProgram.GetVariable(int) StoredProgram.FindVariable(Evaluation) StoredProgram.FindVariable(string) StoredProgram.VariableExists(string) StoredProgram.GetVarValue(string) StoredProgram.UpdateVariable(string, int) StoredProgram.UpdateVariable(string, double) StoredProgram.UpdateVariable(string, bool) StoredProgram.DeleteVariable(string) StoredProgram.IsExpression(string) StoredProgram.EvaluateExpressionWithString(string) StoredProgram.EvaluateExpression(string) StoredProgram.Add(Command) StoredProgram.NextCommand() StoredProgram.ResetProgram() StoredProgram.Commandsleft() StoredProgram.PC ArrayList.Adapter(IList) ArrayList.Add(object) ArrayList.AddRange(ICollection) ArrayList.BinarySearch(int, int, object, IComparer) ArrayList.BinarySearch(object) ArrayList.BinarySearch(object, IComparer) ArrayList.Clear() ArrayList.Clone() ArrayList.Contains(object) ArrayList.CopyTo(Array) ArrayList.CopyTo(Array, int) ArrayList.CopyTo(int, Array, int, int) ArrayList.FixedSize(ArrayList) ArrayList.FixedSize(IList) ArrayList.GetEnumerator() ArrayList.GetEnumerator(int, int) ArrayList.GetRange(int, int) ArrayList.IndexOf(object) ArrayList.IndexOf(object, int) ArrayList.IndexOf(object, int, int) ArrayList.Insert(int, object) ArrayList.InsertRange(int, ICollection) ArrayList.LastIndexOf(object) ArrayList.LastIndexOf(object, int) ArrayList.LastIndexOf(object, int, int) ArrayList.ReadOnly(ArrayList) ArrayList.ReadOnly(IList) ArrayList.Remove(object) ArrayList.RemoveAt(int) ArrayList.RemoveRange(int, int) ArrayList.Repeat(object, int) ArrayList.Reverse() ArrayList.Reverse(int, int) ArrayList.SetRange(int, ICollection) ArrayList.Sort() ArrayList.Sort(IComparer) ArrayList.Sort(int, int, IComparer) ArrayList.Synchronized(ArrayList) ArrayList.Synchronized(IList) ArrayList.ToArray() ArrayList.ToArray(Type) ArrayList.TrimToSize() ArrayList.Capacity ArrayList.Count ArrayList.IsFixedSize ArrayList.IsReadOnly ArrayList.IsSynchronized ArrayList.this[int] ArrayList.SyncRoot object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors CsStoredProgram(ICanvas) Initializes a new instance of the CsStoredProgram class with the specified canvas. public CsStoredProgram(ICanvas canvas) Parameters canvas ICanvas The canvas where the program commands will be executed. Methods Pop() public override ConditionalCommand Pop() Returns ConditionalCommand Push(ConditionalCommand) Pushes a conditional command onto the program's execution stack. This method is overridden from the base BOOSE.StoredProgram class. public override void Push(ConditionalCommand Com) Parameters Com ConditionalCommand The conditional command to be pushed onto the stack. Run() Executes the program commands in a loop until all commands have been executed or an error occurs. This method checks the program's execution time and throws an exception if the program exceeds the allowed time limit. public override void Run()"
  },
  "api/ASE_Assignment.CsTriangleCommand.html": {
    "href": "api/ASE_Assignment.CsTriangleCommand.html",
    "title": "Class CsTriangleCommand | Ase_Assignment_Parishma_77356742",
    "keywords": "Class CsTriangleCommand Namespace ASE_Assignment Assembly ASE Assignment.dll A custom command for drawing a triangle on the canvas. Inherits from BOOSE.CommandTwoParameters to handle width and height parameters. public class CsTriangleCommand : CommandTwoParameters, ICommand Inheritance object Command CanvasCommand CommandOneParameter CommandTwoParameters CsTriangleCommand Implements ICommand Inherited Members CommandTwoParameters.param2 CommandTwoParameters.param2unprocessed CommandOneParameter.param1 CommandOneParameter.param1unprocessed CanvasCommand.yPos CanvasCommand.xPos CanvasCommand.canvas CanvasCommand.Canvas Command.program Command.parameterList Command.parameters Command.paramsint Command.Set(StoredProgram, string) Command.Compile() Command.ProcessParameters(string) Command.ToString() Command.Program Command.Name Command.ParameterList Command.Parameters Command.Paramsint object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors CsTriangleCommand() public CsTriangleCommand() Methods CheckParameters(string[]) Ensures the command parameters are valid for the triangle command. public override void CheckParameters(string[] parameterList) Parameters parameterList string[] An array containing the width and height as strings. Exceptions CommandException Thrown if fewer than two parameters are provided. Execute() Executes the triangle-drawing command using the provided width and height parameters. public override void Execute() Exceptions RestrictionException Thrown if the triangle dimensions (width or height) are invalid (e.g., non-positive)."
  },
  "api/ASE_Assignment.CsWriteCommand.html": {
    "href": "api/ASE_Assignment.CsWriteCommand.html",
    "title": "Class CsWriteCommand | Ase_Assignment_Parishma_77356742",
    "keywords": "Class CsWriteCommand Namespace ASE_Assignment Assembly ASE Assignment.dll A custom command for writing text on the canvas. Inherits from BOOSE.CommandOneParameter to handle a single parameter (the text to write). public class CsWriteCommand : CommandOneParameter, ICommand Inheritance object Command CanvasCommand CommandOneParameter CsWriteCommand Implements ICommand Inherited Members CommandOneParameter.param1 CommandOneParameter.param1unprocessed CanvasCommand.yPos CanvasCommand.xPos CanvasCommand.canvas CanvasCommand.Canvas Command.program Command.parameterList Command.parameters Command.paramsint Command.Set(StoredProgram, string) Command.Compile() Command.ProcessParameters(string) Command.ToString() Command.Program Command.Name Command.ParameterList Command.Parameters Command.Paramsint object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Methods CheckParameters(string[]) Checks that at least one parameter (the text) is provided. public override void CheckParameters(string[] parameterList) Parameters parameterList string[] An array of parameters; the first parameter is the text to write. Exceptions CommandException Thrown if no parameters are provided. Execute() Executes the text-writing command using the single parameter provided (i.e., the text to be drawn on the canvas). public override void Execute()"
  },
  "api/ASE_Assignment.CustomCommandFactory.html": {
    "href": "api/ASE_Assignment.CustomCommandFactory.html",
    "title": "Class CustomCommandFactory | Ase_Assignment_Parishma_77356742",
    "keywords": "Class CustomCommandFactory Namespace ASE_Assignment Assembly ASE Assignment.dll A custom command factory extending BOOSE.CommandFactory to provide additional commands such as \"tri\" and \"writeline\". Unrecognized commands are either passed to the base factory or result in an exception. public class CustomCommandFactory : CommandFactory, ICommandFactory Inheritance object CommandFactory CustomCommandFactory Implements ICommandFactory Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods MakeCommand(string) Creates a command object based on the specified commandType. Custom commands such as \"tri\" and \"writeline\" are supported, while other commands are handled by the base factory. Throws an exception if the command type is unrecognized. public override ICommand MakeCommand(string commandType) Parameters commandType string The string representing the type of command to create. Returns ICommand An BOOSE.ICommand instance corresponding to the requested command. Exceptions FactoryException Thrown when the command type is not recognized by this factory or the base factory."
  },
  "api/ASE_Assignment.Form2.html": {
    "href": "api/ASE_Assignment.Form2.html",
    "title": "Class Form2 | Ase_Assignment_Parishma_77356742",
    "keywords": "Class Form2 Namespace ASE_Assignment Assembly ASE Assignment.dll Represents the main form of the application for executing and displaying canvas drawing commands. public class Form2 : Form, IDropTarget, ISynchronizeInvoke, IWin32Window, IBindableComponent, IComponent, IDisposable, IContainerControl Inheritance object MarshalByRefObject Component Control ScrollableControl ContainerControl Form Form2 Implements IDropTarget ISynchronizeInvoke IWin32Window IBindableComponent IComponent IDisposable IContainerControl Inherited Members Form.SetVisibleCore(bool) Form.Activate() Form.ActivateMdiChild(Form) Form.AddOwnedForm(Form) Form.AdjustFormScrollbars(bool) Form.Close() Form.CreateAccessibilityInstance() Form.CreateControlsInstance() Form.CreateHandle() Form.DefWndProc(ref Message) Form.ProcessMnemonic(char) Form.CenterToParent() Form.CenterToScreen() Form.LayoutMdi(MdiLayout) Form.OnActivated(EventArgs) Form.OnBackgroundImageChanged(EventArgs) Form.OnBackgroundImageLayoutChanged(EventArgs) Form.OnClosing(CancelEventArgs) Form.OnClosed(EventArgs) Form.OnFormClosing(FormClosingEventArgs) Form.OnFormClosed(FormClosedEventArgs) Form.OnCreateControl() Form.OnDeactivate(EventArgs) Form.OnEnabledChanged(EventArgs) Form.OnEnter(EventArgs) Form.OnFontChanged(EventArgs) Form.OnGotFocus(EventArgs) Form.OnHandleCreated(EventArgs) Form.OnHandleDestroyed(EventArgs) Form.OnHelpButtonClicked(CancelEventArgs) Form.OnLayout(LayoutEventArgs) Form.OnLoad(EventArgs) Form.OnMaximizedBoundsChanged(EventArgs) Form.OnMaximumSizeChanged(EventArgs) Form.OnMinimumSizeChanged(EventArgs) Form.OnInputLanguageChanged(InputLanguageChangedEventArgs) Form.OnInputLanguageChanging(InputLanguageChangingEventArgs) Form.OnVisibleChanged(EventArgs) Form.OnMdiChildActivate(EventArgs) Form.OnMenuStart(EventArgs) Form.OnMenuComplete(EventArgs) Form.OnPaint(PaintEventArgs) Form.OnResize(EventArgs) Form.OnDpiChanged(DpiChangedEventArgs) Form.OnGetDpiScaledSize(int, int, ref Size) Form.OnRightToLeftLayoutChanged(EventArgs) Form.OnShown(EventArgs) Form.OnTextChanged(EventArgs) Form.ProcessCmdKey(ref Message, Keys) Form.ProcessDialogKey(Keys) Form.ProcessDialogChar(char) Form.ProcessKeyPreview(ref Message) Form.ProcessTabKey(bool) Form.RemoveOwnedForm(Form) Form.Select(bool, bool) Form.ScaleMinMaxSize(float, float, bool) Form.GetScaledBounds(Rectangle, SizeF, BoundsSpecified) Form.ScaleControl(SizeF, BoundsSpecified) Form.SetBoundsCore(int, int, int, int, BoundsSpecified) Form.SetClientSizeCore(int, int) Form.SetDesktopBounds(int, int, int, int) Form.SetDesktopLocation(int, int) Form.Show(IWin32Window) Form.ShowDialog() Form.ShowDialog(IWin32Window) Form.ToString() Form.UpdateDefaultButton() Form.OnResizeBegin(EventArgs) Form.OnResizeEnd(EventArgs) Form.OnStyleChanged(EventArgs) Form.ValidateChildren() Form.ValidateChildren(ValidationConstraints) Form.WndProc(ref Message) Form.AcceptButton Form.ActiveForm Form.ActiveMdiChild Form.AllowTransparency Form.AutoScroll Form.AutoSize Form.AutoSizeMode Form.AutoValidate Form.BackColor Form.FormBorderStyle Form.CancelButton Form.ClientSize Form.ControlBox Form.CreateParams Form.DefaultImeMode Form.DefaultSize Form.DesktopBounds Form.DesktopLocation Form.DialogResult Form.HelpButton Form.Icon Form.IsMdiChild Form.IsMdiContainer Form.IsRestrictedWindow Form.KeyPreview Form.Location Form.MaximizedBounds Form.MaximumSize Form.MainMenuStrip Form.MinimumSize Form.MaximizeBox Form.MdiChildren Form.MdiChildrenMinimizedAnchorBottom Form.MdiParent Form.MinimizeBox Form.Modal Form.Opacity Form.OwnedForms Form.Owner Form.RestoreBounds Form.RightToLeftLayout Form.ShowInTaskbar Form.ShowIcon Form.ShowWithoutActivation Form.Size Form.SizeGripStyle Form.StartPosition Form.Text Form.TopLevel Form.TopMost Form.TransparencyKey Form.WindowState Form.AutoSizeChanged Form.AutoValidateChanged Form.HelpButtonClicked Form.MaximizedBoundsChanged Form.MaximumSizeChanged Form.MinimumSizeChanged Form.Activated Form.Deactivate Form.FormClosing Form.FormClosed Form.Load Form.MdiChildActivate Form.MenuComplete Form.MenuStart Form.InputLanguageChanged Form.InputLanguageChanging Form.RightToLeftLayoutChanged Form.Shown Form.DpiChanged Form.ResizeBegin Form.ResizeEnd ContainerControl.OnAutoValidateChanged(EventArgs) ContainerControl.OnMove(EventArgs) ContainerControl.OnParentChanged(EventArgs) ContainerControl.PerformAutoScale() ContainerControl.RescaleConstantsForDpi(int, int) ContainerControl.Validate() ContainerControl.Validate(bool) ContainerControl.AutoScaleDimensions ContainerControl.AutoScaleFactor ContainerControl.AutoScaleMode ContainerControl.BindingContext ContainerControl.CanEnableIme ContainerControl.ActiveControl ContainerControl.CurrentAutoScaleDimensions ContainerControl.ParentForm ScrollableControl.ScrollStateAutoScrolling ScrollableControl.ScrollStateHScrollVisible ScrollableControl.ScrollStateVScrollVisible ScrollableControl.ScrollStateUserHasScrolled ScrollableControl.ScrollStateFullDrag ScrollableControl.GetScrollState(int) ScrollableControl.OnMouseWheel(MouseEventArgs) ScrollableControl.OnRightToLeftChanged(EventArgs) ScrollableControl.OnPaintBackground(PaintEventArgs) ScrollableControl.OnPaddingChanged(EventArgs) ScrollableControl.SetDisplayRectLocation(int, int) ScrollableControl.ScrollControlIntoView(Control) ScrollableControl.ScrollToControl(Control) ScrollableControl.OnScroll(ScrollEventArgs) ScrollableControl.SetAutoScrollMargin(int, int) ScrollableControl.SetScrollState(int, bool) ScrollableControl.AutoScrollMargin ScrollableControl.AutoScrollPosition ScrollableControl.AutoScrollMinSize ScrollableControl.DisplayRectangle ScrollableControl.HScroll ScrollableControl.HorizontalScroll ScrollableControl.VScroll ScrollableControl.VerticalScroll ScrollableControl.Scroll Control.GetAccessibilityObjectById(int) Control.SetAutoSizeMode(AutoSizeMode) Control.GetAutoSizeMode() Control.GetPreferredSize(Size) Control.AccessibilityNotifyClients(AccessibleEvents, int) Control.AccessibilityNotifyClients(AccessibleEvents, int, int) Control.BeginInvoke(Delegate) Control.BeginInvoke(Action) Control.BeginInvoke(Delegate, params object[]) Control.BringToFront() Control.Contains(Control) Control.CreateGraphics() Control.CreateControl() Control.DestroyHandle() Control.DoDragDrop(object, DragDropEffects) Control.DoDragDrop(object, DragDropEffects, Bitmap, Point, bool) Control.DrawToBitmap(Bitmap, Rectangle) Control.EndInvoke(IAsyncResult) Control.FindForm() Control.GetTopLevel() Control.RaiseKeyEvent(object, KeyEventArgs) Control.RaiseMouseEvent(object, MouseEventArgs) Control.Focus() Control.FromChildHandle(nint) Control.FromHandle(nint) Control.GetChildAtPoint(Point, GetChildAtPointSkip) Control.GetChildAtPoint(Point) Control.GetContainerControl() Control.GetNextControl(Control, bool) Control.GetStyle(ControlStyles) Control.Hide() Control.InitLayout() Control.Invalidate(Region) Control.Invalidate(Region, bool) Control.Invalidate() Control.Invalidate(bool) Control.Invalidate(Rectangle) Control.Invalidate(Rectangle, bool) Control.Invoke(Action) Control.Invoke(Delegate) Control.Invoke(Delegate, params object[]) Control.Invoke<T>(Func<T>) Control.InvokePaint(Control, PaintEventArgs) Control.InvokePaintBackground(Control, PaintEventArgs) Control.IsKeyLocked(Keys) Control.IsInputChar(char) Control.IsInputKey(Keys) Control.IsMnemonic(char, string) Control.LogicalToDeviceUnits(int) Control.LogicalToDeviceUnits(Size) Control.ScaleBitmapLogicalToDevice(ref Bitmap) Control.NotifyInvalidate(Rectangle) Control.InvokeOnClick(Control, EventArgs) Control.OnAutoSizeChanged(EventArgs) Control.OnBackColorChanged(EventArgs) Control.OnBindingContextChanged(EventArgs) Control.OnCausesValidationChanged(EventArgs) Control.OnContextMenuStripChanged(EventArgs) Control.OnCursorChanged(EventArgs) Control.OnDataContextChanged(EventArgs) Control.OnDockChanged(EventArgs) Control.OnForeColorChanged(EventArgs) Control.OnNotifyMessage(Message) Control.OnParentBackColorChanged(EventArgs) Control.OnParentBackgroundImageChanged(EventArgs) Control.OnParentBindingContextChanged(EventArgs) Control.OnParentCursorChanged(EventArgs) Control.OnParentDataContextChanged(EventArgs) Control.OnParentEnabledChanged(EventArgs) Control.OnParentFontChanged(EventArgs) Control.OnParentForeColorChanged(EventArgs) Control.OnParentRightToLeftChanged(EventArgs) Control.OnParentVisibleChanged(EventArgs) Control.OnPrint(PaintEventArgs) Control.OnTabIndexChanged(EventArgs) Control.OnTabStopChanged(EventArgs) Control.OnClick(EventArgs) Control.OnClientSizeChanged(EventArgs) Control.OnControlAdded(ControlEventArgs) Control.OnControlRemoved(ControlEventArgs) Control.OnLocationChanged(EventArgs) Control.OnDoubleClick(EventArgs) Control.OnDragEnter(DragEventArgs) Control.OnDragOver(DragEventArgs) Control.OnDragLeave(EventArgs) Control.OnDragDrop(DragEventArgs) Control.OnGiveFeedback(GiveFeedbackEventArgs) Control.InvokeGotFocus(Control, EventArgs) Control.OnHelpRequested(HelpEventArgs) Control.OnInvalidated(InvalidateEventArgs) Control.OnKeyDown(KeyEventArgs) Control.OnKeyPress(KeyPressEventArgs) Control.OnKeyUp(KeyEventArgs) Control.OnLeave(EventArgs) Control.InvokeLostFocus(Control, EventArgs) Control.OnLostFocus(EventArgs) Control.OnMarginChanged(EventArgs) Control.OnMouseDoubleClick(MouseEventArgs) Control.OnMouseClick(MouseEventArgs) Control.OnMouseCaptureChanged(EventArgs) Control.OnMouseDown(MouseEventArgs) Control.OnMouseEnter(EventArgs) Control.OnMouseLeave(EventArgs) Control.OnDpiChangedBeforeParent(EventArgs) Control.OnDpiChangedAfterParent(EventArgs) Control.OnMouseHover(EventArgs) Control.OnMouseMove(MouseEventArgs) Control.OnMouseUp(MouseEventArgs) Control.OnQueryContinueDrag(QueryContinueDragEventArgs) Control.OnRegionChanged(EventArgs) Control.OnPreviewKeyDown(PreviewKeyDownEventArgs) Control.OnSizeChanged(EventArgs) Control.OnChangeUICues(UICuesEventArgs) Control.OnSystemColorsChanged(EventArgs) Control.OnValidating(CancelEventArgs) Control.OnValidated(EventArgs) Control.PerformLayout() Control.PerformLayout(Control, string) Control.PointToClient(Point) Control.PointToScreen(Point) Control.PreProcessMessage(ref Message) Control.PreProcessControlMessage(ref Message) Control.ProcessKeyEventArgs(ref Message) Control.ProcessKeyMessage(ref Message) Control.RaiseDragEvent(object, DragEventArgs) Control.RaisePaintEvent(object, PaintEventArgs) Control.RecreateHandle() Control.RectangleToClient(Rectangle) Control.RectangleToScreen(Rectangle) Control.ReflectMessage(nint, ref Message) Control.Refresh() Control.ResetMouseEventArgs() Control.ResetText() Control.ResumeLayout() Control.ResumeLayout(bool) Control.Scale(SizeF) Control.Select() Control.SelectNextControl(Control, bool, bool, bool, bool) Control.SendToBack() Control.SetBounds(int, int, int, int) Control.SetBounds(int, int, int, int, BoundsSpecified) Control.SizeFromClientSize(Size) Control.SetStyle(ControlStyles, bool) Control.SetTopLevel(bool) Control.RtlTranslateAlignment(HorizontalAlignment) Control.RtlTranslateAlignment(LeftRightAlignment) Control.RtlTranslateAlignment(ContentAlignment) Control.RtlTranslateHorizontal(HorizontalAlignment) Control.RtlTranslateLeftRight(LeftRightAlignment) Control.RtlTranslateContent(ContentAlignment) Control.Show() Control.SuspendLayout() Control.Update() Control.UpdateBounds() Control.UpdateBounds(int, int, int, int) Control.UpdateBounds(int, int, int, int, int, int) Control.UpdateZOrder() Control.UpdateStyles() Control.OnImeModeChanged(EventArgs) Control.AccessibilityObject Control.AccessibleDefaultActionDescription Control.AccessibleDescription Control.AccessibleName Control.AccessibleRole Control.AllowDrop Control.Anchor Control.AutoScrollOffset Control.LayoutEngine Control.DataContext Control.BackgroundImage Control.BackgroundImageLayout Control.Bottom Control.Bounds Control.CanFocus Control.CanRaiseEvents Control.CanSelect Control.Capture Control.CausesValidation Control.CheckForIllegalCrossThreadCalls Control.ClientRectangle Control.CompanyName Control.ContainsFocus Control.ContextMenuStrip Control.Controls Control.Created Control.Cursor Control.DataBindings Control.DefaultBackColor Control.DefaultCursor Control.DefaultFont Control.DefaultForeColor Control.DefaultMargin Control.DefaultMaximumSize Control.DefaultMinimumSize Control.DefaultPadding Control.DeviceDpi Control.IsDisposed Control.Disposing Control.Dock Control.DoubleBuffered Control.Enabled Control.Focused Control.Font Control.FontHeight Control.ForeColor Control.Handle Control.HasChildren Control.Height Control.IsHandleCreated Control.InvokeRequired Control.IsAccessible Control.IsAncestorSiteInDesignMode Control.IsMirrored Control.Left Control.Margin Control.ModifierKeys Control.MouseButtons Control.MousePosition Control.Name Control.Parent Control.ProductName Control.ProductVersion Control.RecreatingHandle Control.Region Control.RenderRightToLeft Control.ResizeRedraw Control.Right Control.RightToLeft Control.ScaleChildren Control.Site Control.TabIndex Control.TabStop Control.Tag Control.Top Control.TopLevelControl Control.ShowKeyboardCues Control.ShowFocusCues Control.UseWaitCursor Control.Visible Control.Width Control.PreferredSize Control.Padding Control.ImeMode Control.ImeModeBase Control.PropagatingImeMode Control.BackColorChanged Control.BackgroundImageChanged Control.BackgroundImageLayoutChanged Control.BindingContextChanged Control.CausesValidationChanged Control.ClientSizeChanged Control.ContextMenuStripChanged Control.CursorChanged Control.DockChanged Control.EnabledChanged Control.FontChanged Control.ForeColorChanged Control.LocationChanged Control.MarginChanged Control.RegionChanged Control.RightToLeftChanged Control.SizeChanged Control.TabIndexChanged Control.TabStopChanged Control.TextChanged Control.VisibleChanged Control.Click Control.ControlAdded Control.ControlRemoved Control.DataContextChanged Control.DragDrop Control.DragEnter Control.DragOver Control.DragLeave Control.GiveFeedback Control.HandleCreated Control.HandleDestroyed Control.HelpRequested Control.Invalidated Control.PaddingChanged Control.Paint Control.QueryContinueDrag Control.QueryAccessibilityHelp Control.DoubleClick Control.Enter Control.GotFocus Control.KeyDown Control.KeyPress Control.KeyUp Control.Layout Control.Leave Control.LostFocus Control.MouseClick Control.MouseDoubleClick Control.MouseCaptureChanged Control.MouseDown Control.MouseEnter Control.MouseLeave Control.DpiChangedBeforeParent Control.DpiChangedAfterParent Control.MouseHover Control.MouseMove Control.MouseUp Control.MouseWheel Control.Move Control.PreviewKeyDown Control.Resize Control.ChangeUICues Control.StyleChanged Control.SystemColorsChanged Control.Validating Control.Validated Control.ParentChanged Control.ImeModeChanged Component.Dispose() Component.GetService(Type) Component.Container Component.DesignMode Component.Events Component.Disposed MarshalByRefObject.GetLifetimeService() MarshalByRefObject.InitializeLifetimeService() MarshalByRefObject.MemberwiseClone(bool) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors Form2() Initializes a new instance of the Form2 class. Sets up the canvas, factory, stored program, and parser components. public Form2() Methods Dispose(bool) Clean up any resources being used. protected override void Dispose(bool disposing) Parameters disposing bool true if managed resources should be disposed; otherwise, false."
  },
  "api/ASE_Assignment.Frame.html": {
    "href": "api/ASE_Assignment.Frame.html",
    "title": "Class Frame | Ase_Assignment_Parishma_77356742",
    "keywords": "Class Frame Namespace ASE_Assignment Assembly ASE Assignment.dll public class Frame : ICanvas Inheritance object Frame Implements ICanvas Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties PenColour public object PenColour { get; set; } Property Value object Xpos public int Xpos { get; set; } Property Value int Ypos public int Ypos { get; set; } Property Value int Methods Circle(int, bool) public void Circle(int radius, bool filled) Parameters radius int filled bool Clear() public void Clear() DrawTo(int, int) public void DrawTo(int x, int y) Parameters x int y int MoveTo(int, int) public void MoveTo(int x, int y) Parameters x int y int Rect(int, int, bool) public void Rect(int width, int height, bool filled) Parameters width int height int filled bool Reset() public void Reset() Set(int, int) public void Set(int width, int height) Parameters width int height int SetColour(int, int, int) public void SetColour(int red, int green, int blue) Parameters red int green int blue int Tri(int, int) public void Tri(int width, int height) Parameters width int height int WriteText(string) public void WriteText(string text) Parameters text string getBitmap() public object getBitmap() Returns object"
  },
  "api/ASE_Assignment.SyntaxCheck.html": {
    "href": "api/ASE_Assignment.SyntaxCheck.html",
    "title": "Class SyntaxCheck | Ase_Assignment_Parishma_77356742",
    "keywords": "Class SyntaxCheck Namespace ASE_Assignment Assembly ASE Assignment.dll public class SyntaxCheck Inheritance object SyntaxCheck Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods ValidateSyntax(string) public static void ValidateSyntax(string command) Parameters command string"
  },
  "api/ASE_Assignment.html": {
    "href": "api/ASE_Assignment.html",
    "title": "Namespace ASE_Assignment | Ase_Assignment_Parishma_77356742",
    "keywords": "Namespace ASE_Assignment Classes CommandCheck Provides functionality to execute canvas commands by parsing input strings and delegating actions to an BOOSE.ICanvas instance. CsCommandFactory A factory class responsible for creating command instances based on the provided command type. It overrides the BOOSE.CommandFactory to return specific command objects. CsMethodCommand Represents a custom implementation of the \"Method\" command. Inherits from the BOOSE.Method class to handle method-related functionality in the program. CsStoredProgram Represents a custom implementation of a stored program that manages the execution of commands in the program. Inherits from the BOOSE.StoredProgram class and overrides methods for program control. CsTriangleCommand A custom command for drawing a triangle on the canvas. Inherits from BOOSE.CommandTwoParameters to handle width and height parameters. CsWriteCommand A custom command for writing text on the canvas. Inherits from BOOSE.CommandOneParameter to handle a single parameter (the text to write). Form2 Represents the main form of the application for executing and displaying canvas drawing commands. Frame SyntaxCheck"
  },
  "api/ASE_assignment.Error.html": {
    "href": "api/ASE_assignment.Error.html",
    "title": "Class Error | Ase_Assignment_Parishma_77356742",
    "keywords": "Class Error Namespace ASE_assignment Assembly ASE Assignment.dll public class Error Inheritance object Error Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods check(string) public static string check(string command) Parameters command string Returns string"
  },
  "api/ASE_assignment_1.html": {
    "href": "api/ASE_assignment_1.html",
    "title": "Namespace ASE_assignment | Ase_Assignment_Parishma_77356742",
    "keywords": "Namespace ASE_assignment Classes Error"
  },
  "api/TestProject1.CanvasTests.html": {
    "href": "api/TestProject1.CanvasTests.html",
    "title": "Class CanvasTests | Ase_Assignment_Parishma_77356742",
    "keywords": "Class CanvasTests Namespace TestProject1 Assembly TestProject1.dll Unit tests for the canvas and related functionality, including commands like MoveTo, DrawTo, Circle, and more. [TestClass] public class CanvasTests Inheritance object CanvasTests Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods CustomCommandFactory_InvalidCommand_ThrowsException() Tests that the CustomCommandFactory throws an exception for an invalid command. [TestMethod] public void CustomCommandFactory_InvalidCommand_ThrowsException() CustomCommandFactory_TriCommand_ReturnsCorrectInstance() Tests that the CustomCommandFactory returns the correct instance for the \"tri\" command. [TestMethod] public void CustomCommandFactory_TriCommand_ReturnsCorrectInstance() CustomCommandFactory_WriteCommand_ReturnsCorrectInstance() Tests that the CustomCommandFactory returns the correct instance for the \"write\" command. [TestMethod] public void CustomCommandFactory_WriteCommand_ReturnsCorrectInstance() SetUp() Initializes resources before each test method is executed. [TestInitialize] public void SetUp() Test_Circle_DrawsCircleOutlineCorrectly() Tests that the Circle command draws a circle outline correctly. [TestMethod] public void Test_Circle_DrawsCircleOutlineCorrectly() Test_Circle_InvalidRadius_ThrowsException() Tests that providing an invalid radius to the Circle command throws a CanvasException. [TestMethod] public void Test_Circle_InvalidRadius_ThrowsException() Test_Clear_ResetsCanvas() Tests that the Clear command resets the canvas correctly. [TestMethod] public void Test_Clear_ResetsCanvas() Test_DrawTo_Command_UpdatesPositionCorrectly() Tests that the DrawTo command updates the pen position correctly. [TestMethod] public void Test_DrawTo_Command_UpdatesPositionCorrectly() Test_MoveTo_Command_UpdatesPositionCorrectly() Tests that the MoveTo command updates the pen position correctly. [TestMethod] public void Test_MoveTo_Command_UpdatesPositionCorrectly() Test_MultilineProgram_ExecutesMultipleCommandsCorrectly() Tests that a multiline program executes multiple commands correctly. [TestMethod] public void Test_MultilineProgram_ExecutesMultipleCommandsCorrectly() Test_MultilineProgram_InvalidCommand_ThrowsException() Tests that a multiline program with an invalid command syntax throws a ParserException. [TestMethod] [ExpectedException(typeof(ParserException))] public void Test_MultilineProgram_InvalidCommand_ThrowsException() Test_MultilineProgram_InvalidCommand_ThrowsParserException() Tests that a multiline program with an invalid command format throws a ParserException. [TestMethod] [ExpectedException(typeof(ParserException))] public void Test_MultilineProgram_InvalidCommand_ThrowsParserException() Test_Rect_DrawsRectangleCorrectly() Tests that the Rect command draws a rectangle correctly. [TestMethod] public void Test_Rect_DrawsRectangleCorrectly() Test_SetColour_UpdatesPenColor() Tests that the SetColour command updates the pen color correctly. [TestMethod] public void Test_SetColour_UpdatesPenColor() Test_Tri_DrawsTriangleCorrectly() Tests that the Tri command draws a triangle correctly. [TestMethod] public void Test_Tri_DrawsTriangleCorrectly() Test_WriteText_AddsTextToCanvas() Tests that the WriteText command adds text to the canvas correctly. [TestMethod] public void Test_WriteText_AddsTextToCanvas()"
  },
  "api/TestProject1.html": {
    "href": "api/TestProject1.html",
    "title": "Namespace TestProject1 | Ase_Assignment_Parishma_77356742",
    "keywords": "Namespace TestProject1 Classes CanvasTests Unit tests for the canvas and related functionality, including commands like MoveTo, DrawTo, Circle, and more."
  },
  "api/TestProject2.CommandUnitTests.html": {
    "href": "api/TestProject2.CommandUnitTests.html",
    "title": "Class CommandUnitTests | Ase_Assignment_Parishma_77356742",
    "keywords": "Class CommandUnitTests Namespace TestProject2 Assembly TestProject1.dll Unit tests for testing command execution and interaction with the stored program and canvas. [TestClass] public class CommandUnitTests Inheritance object CommandUnitTests Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods Setup() Initializes the mock objects and dependencies before each test method is executed. [TestInitialize] public void Setup() Test_RunCommandWithInvalidParameters_ShouldThrowException() Tests that running a command with invalid parameters throws a StoredProgramException. [TestMethod] [ExpectedException(typeof(StoredProgramException))] public void Test_RunCommandWithInvalidParameters_ShouldThrowException() Test_RunCommandWithValidParameters_ShouldUpdateCanvasCorrectly() Tests that running a valid command updates the canvas position correctly. [TestMethod] public void Test_RunCommandWithValidParameters_ShouldUpdateCanvasCorrectly() Test_RunMultipleCommands_ShouldExecuteCorrectly() Tests running multiple commands in sequence and checks if the final position is updated correctly. [TestMethod] public void Test_RunMultipleCommands_ShouldExecuteCorrectly() Test_RunProgramWithEmptyProgram_ShouldNotThrowException() Tests running an empty program and ensures that no exceptions are thrown. [TestMethod] public void Test_RunProgramWithEmptyProgram_ShouldNotThrowException() Test_RunProgramWithMultipleValidCommands_ShouldExecuteInSequence() Tests running a program with multiple valid commands and ensures the position is updated correctly in sequence. [TestMethod] public void Test_RunProgramWithMultipleValidCommands_ShouldExecuteInSequence() Test_RunSingleCommand_ShouldNotChangeGlobalOutputExceptionMsg() Tests running a single command and ensures no exception or unexpected changes occur. [TestMethod] public void Test_RunSingleCommand_ShouldNotChangeGlobalOutputExceptionMsg()"
  },
  "api/TestProject2.html": {
    "href": "api/TestProject2.html",
    "title": "Namespace TestProject2 | Ase_Assignment_Parishma_77356742",
    "keywords": "Namespace TestProject2 Classes CommandUnitTests Unit tests for testing command execution and interaction with the stored program and canvas."
  },
  "docs/getting-started.html": {
    "href": "docs/getting-started.html",
    "title": "Getting Started | Ase_Assignment_Parishma_77356742",
    "keywords": "Getting Started"
  },
  "docs/introduction.html": {
    "href": "docs/introduction.html",
    "title": "Introduction | Ase_Assignment_Parishma_77356742",
    "keywords": "Introduction"
  },
  "index.html": {
    "href": "index.html",
    "title": "This is the HOMEPAGE. | Ase_Assignment_Parishma_77356742",
    "keywords": "This is the HOMEPAGE. Refer to Markdown for how to write markdown files. Quick Start Notes: Add images to the images folder if the file is referencing an image."
  }
}